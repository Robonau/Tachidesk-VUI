import{c as v}from"./QSpinner.cedf2831.js";import{c as b,b as h,a as S}from"./scroll.fbb25234.js";import{w as T,B as x,o as C,Z as P,g as w,S as E}from"./index.b35b6c87.js";const{passive:m}=E,M=["both","horizontal","vertical"];var y=v({name:"QScrollObserver",props:{axis:{type:String,validator:e=>M.includes(e),default:"vertical"},debounce:[String,Number],scrollTarget:{default:void 0}},emits:["scroll"],setup(e,{emit:p}){const t={position:{top:0,left:0},direction:"down",directionChanged:!1,delta:{top:0,left:0},inflectionPoint:{top:0,left:0}};let n=null,i,s;T(()=>e.scrollTarget,()=>{f(),u()});function c(){n!==null&&n();const r=Math.max(0,h(i)),a=S(i),o={top:r-t.position.top,left:a-t.position.left};if(e.axis==="vertical"&&o.top===0||e.axis==="horizontal"&&o.left===0)return;const g=Math.abs(o.top)>=Math.abs(o.left)?o.top<0?"up":"down":o.left<0?"left":"right";t.position={top:r,left:a},t.directionChanged=t.direction!==g,t.delta=o,t.directionChanged===!0&&(t.direction=g,t.inflectionPoint=t.position),p("scroll",{...t})}function u(){i=b(s,e.scrollTarget),i.addEventListener("scroll",l,m),l(!0)}function f(){i!==void 0&&(i.removeEventListener("scroll",l,m),i=void 0)}function l(r){if(r===!0||e.debounce===0||e.debounce==="0")c();else if(n===null){const[a,o]=e.debounce?[setTimeout(c,e.debounce),clearTimeout]:[requestAnimationFrame(c),cancelAnimationFrame];n=()=>{o(a),n=null}}}const{proxy:d}=w();return x(()=>{s=d.$el.parentNode,u()}),C(()=>{n!==null&&n(),f()}),Object.assign(d,{trigger:l,getPosition:()=>t}),P}});export{y as Q};
