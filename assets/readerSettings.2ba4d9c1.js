import { r as ref, P as Plugin } from "./index.75e4774b.js";
import { fetchJSON, fetcher } from "./fetcher.d026f468.js";
const vue_RM = ref("RTL");
const vue_WT = ref(false);
const vue_Scale = ref(false);
const vue_Offset = ref(false);
const vue_title = ref("");
function tobool(data) {
  return data == "true";
}
function chapterMeta(mangaID) {
  vue_RM.value = Plugin.getItem("vue_RM") || "RTL";
  vue_WT.value = Plugin.getItem("vue_WT") || false;
  vue_Scale.value = Plugin.getItem("vue_Scale") || false;
  vue_Offset.value = Plugin.getItem("vue_Offset") || false;
  fetchJSON(`/api/v1/manga/${mangaID}`).then((manga2) => {
    vue_RM.value = manga2.meta.vue_RM ? manga2.meta.vue_RM : Plugin.getItem("vue_RM") || "RTL";
    vue_WT.value = manga2.meta.vue_WT ? tobool(manga2.meta.vue_WT) : Plugin.getItem("vue_WT") || false;
    vue_Scale.value = manga2.meta.vue_Scale ? tobool(manga2.meta.vue_Scale) : Plugin.getItem("vue_Scale") || false;
    vue_Offset.value = manga2.meta.vue_Offset ? tobool(manga2.meta.vue_Offset) : Plugin.getItem("vue_Offset") || false;
    vue_title.value = manga2.title;
  });
  function setRM(data) {
    vue_RM.value = data;
    setFormData("vue_RM", data);
  }
  function setWT(data) {
    vue_WT.value = data;
    setFormData("vue_WT", `${data}`);
  }
  function setScale(data) {
    vue_Scale.value = data;
    setFormData("vue_Scale", `${data}`);
  }
  function setOffset(data) {
    vue_Offset.value = data;
    setFormData("vue_Offset", `${data}`);
  }
  function setFormData(key, data) {
    const fd = new FormData();
    fd.append("key", key);
    fd.append("value", data);
    fetcher(`/api/v1/manga/${mangaID}/meta`, {
      method: "PATCH",
      body: fd
    });
  }
  return {
    vue_RM,
    vue_WT,
    vue_Scale,
    vue_Offset,
    vue_title,
    setRM,
    setWT,
    setScale,
    setOffset
  };
}
export { chapterMeta as c };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhZGVyU2V0dGluZ3MuMmJhNGQ5YzEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlYWRlci9yZWFkZXJTZXR0aW5ncy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChDKSBDb250cmlidXRvcnMgdG8gdGhlIFN1d2F5b21pIHByb2plY3RcbiAqXG4gKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cHM6Ly9tb3ppbGxhLm9yZy9NUEwvMi4wLy4gKi9cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSc7XG5pbXBvcnQgeyBtYW5nYSB9IGZyb20gJy4uL2dsb2JhbC9tb2RlbHMnO1xuaW1wb3J0IHsgTG9jYWxTdG9yYWdlIH0gZnJvbSAncXVhc2FyJztcbmltcG9ydCB7IGZldGNoZXIsIGZldGNoSlNPTiB9IGZyb20gJ3NyYy9ib290L2ZldGNoZXInO1xuXG5jb25zdCB2dWVfUk0gPSByZWYoPHN0cmluZz4nUlRMJyk7XG5jb25zdCB2dWVfV1QgPSByZWYoPGJvb2xlYW4+ZmFsc2UpO1xuY29uc3QgdnVlX1NjYWxlID0gcmVmKDxib29sZWFuPmZhbHNlKTtcbmNvbnN0IHZ1ZV9PZmZzZXQgPSByZWYoPGJvb2xlYW4+ZmFsc2UpO1xuY29uc3QgdnVlX3RpdGxlID0gcmVmKDxzdHJpbmc+JycpO1xuXG5mdW5jdGlvbiB0b2Jvb2woZGF0YTogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiBkYXRhID09ICd0cnVlJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoYXB0ZXJNZXRhKG1hbmdhSUQ6IG51bWJlcikge1xuICB2dWVfUk0udmFsdWUgPSAoTG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Z1ZV9STScpIHx8ICdSVEwnKSBhcyBzdHJpbmc7XG4gIHZ1ZV9XVC52YWx1ZSA9IChMb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndnVlX1dUJykgfHwgZmFsc2UpIGFzIGJvb2xlYW47XG4gIHZ1ZV9TY2FsZS52YWx1ZSA9IChMb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndnVlX1NjYWxlJykgfHwgZmFsc2UpIGFzIGJvb2xlYW47XG4gIHZ1ZV9PZmZzZXQudmFsdWUgPSAoTG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Z1ZV9PZmZzZXQnKSB8fCBmYWxzZSkgYXMgYm9vbGVhbjtcbiAgZmV0Y2hKU09OKGAvYXBpL3YxL21hbmdhLyR7bWFuZ2FJRH1gKS50aGVuKChtYW5nYTogbWFuZ2EpOiB2b2lkID0+IHtcbiAgICB2dWVfUk0udmFsdWUgPSBtYW5nYS5tZXRhLnZ1ZV9STVxuICAgICAgPyBtYW5nYS5tZXRhLnZ1ZV9STVxuICAgICAgOiAoKExvY2FsU3RvcmFnZS5nZXRJdGVtKCd2dWVfUk0nKSB8fCAnUlRMJykgYXMgc3RyaW5nKTtcbiAgICB2dWVfV1QudmFsdWUgPSBtYW5nYS5tZXRhLnZ1ZV9XVFxuICAgICAgPyB0b2Jvb2wobWFuZ2EubWV0YS52dWVfV1QpXG4gICAgICA6ICgoTG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Z1ZV9XVCcpIHx8IGZhbHNlKSBhcyBib29sZWFuKTtcbiAgICB2dWVfU2NhbGUudmFsdWUgPSBtYW5nYS5tZXRhLnZ1ZV9TY2FsZVxuICAgICAgPyB0b2Jvb2wobWFuZ2EubWV0YS52dWVfU2NhbGUpXG4gICAgICA6ICgoTG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Z1ZV9TY2FsZScpIHx8IGZhbHNlKSBhcyBib29sZWFuKTtcbiAgICB2dWVfT2Zmc2V0LnZhbHVlID0gbWFuZ2EubWV0YS52dWVfT2Zmc2V0XG4gICAgICA/IHRvYm9vbChtYW5nYS5tZXRhLnZ1ZV9PZmZzZXQpXG4gICAgICA6ICgoTG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Z1ZV9PZmZzZXQnKSB8fCBmYWxzZSkgYXMgYm9vbGVhbik7XG4gICAgdnVlX3RpdGxlLnZhbHVlID0gbWFuZ2EudGl0bGU7XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIHNldFJNKGRhdGE6IHN0cmluZykge1xuICAgIHZ1ZV9STS52YWx1ZSA9IGRhdGE7XG4gICAgc2V0Rm9ybURhdGEoJ3Z1ZV9STScsIGRhdGEpO1xuICB9XG4gIGZ1bmN0aW9uIHNldFdUKGRhdGE6IGJvb2xlYW4pIHtcbiAgICB2dWVfV1QudmFsdWUgPSBkYXRhO1xuICAgIHNldEZvcm1EYXRhKCd2dWVfV1QnLCBgJHtkYXRhfWApO1xuICB9XG4gIGZ1bmN0aW9uIHNldFNjYWxlKGRhdGE6IGJvb2xlYW4pIHtcbiAgICB2dWVfU2NhbGUudmFsdWUgPSBkYXRhO1xuICAgIHNldEZvcm1EYXRhKCd2dWVfU2NhbGUnLCBgJHtkYXRhfWApO1xuICB9XG4gIGZ1bmN0aW9uIHNldE9mZnNldChkYXRhOiBib29sZWFuKSB7XG4gICAgdnVlX09mZnNldC52YWx1ZSA9IGRhdGE7XG4gICAgc2V0Rm9ybURhdGEoJ3Z1ZV9PZmZzZXQnLCBgJHtkYXRhfWApO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0Rm9ybURhdGEoa2V5OiBzdHJpbmcsIGRhdGE6IHN0cmluZykge1xuICAgIGNvbnN0IGZkID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgZmQuYXBwZW5kKCdrZXknLCBrZXkpO1xuICAgIGZkLmFwcGVuZCgndmFsdWUnLCBkYXRhKTtcbiAgICBmZXRjaGVyKGAvYXBpL3YxL21hbmdhLyR7bWFuZ2FJRH0vbWV0YWAsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGJvZHk6IGZkXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHZ1ZV9STSxcbiAgICB2dWVfV1QsXG4gICAgdnVlX1NjYWxlLFxuICAgIHZ1ZV9PZmZzZXQsXG4gICAgdnVlX3RpdGxlLFxuICAgIHNldFJNLFxuICAgIHNldFdULFxuICAgIHNldFNjYWxlLFxuICAgIHNldE9mZnNldFxuICB9O1xufVxuIl0sIm5hbWVzIjpbIkxvY2FsU3RvcmFnZSIsIm1hbmdhIl0sIm1hcHBpbmdzIjoiOztBQVdBLE1BQU0sU0FBUyxJQUFZLEtBQUs7QUFDaEMsTUFBTSxTQUFTLElBQWEsS0FBSztBQUNqQyxNQUFNLFlBQVksSUFBYSxLQUFLO0FBQ3BDLE1BQU0sYUFBYSxJQUFhLEtBQUs7QUFDckMsTUFBTSxZQUFZLElBQVksRUFBRTtBQUVoQyxTQUFTLE9BQU8sTUFBdUI7QUFDckMsU0FBTyxRQUFRO0FBQ2pCO0FBRU8sU0FBUyxZQUFZLFNBQWlCO0FBQzNDLFNBQU8sUUFBU0EsT0FBYSxRQUFRLFFBQVEsS0FBSztBQUNsRCxTQUFPLFFBQVNBLE9BQWEsUUFBUSxRQUFRLEtBQUs7QUFDbEQsWUFBVSxRQUFTQSxPQUFhLFFBQVEsV0FBVyxLQUFLO0FBQ3hELGFBQVcsUUFBU0EsT0FBYSxRQUFRLFlBQVksS0FBSztBQUMxRCxZQUFVLGlCQUFpQixTQUFTLEVBQUUsS0FBSyxDQUFDQyxXQUF1QjtBQUMxRCxXQUFBLFFBQVFBLE9BQU0sS0FBSyxTQUN0QkEsT0FBTSxLQUFLLFNBQ1RELE9BQWEsUUFBUSxRQUFRLEtBQUs7QUFDeEMsV0FBTyxRQUFRQyxPQUFNLEtBQUssU0FDdEIsT0FBT0EsT0FBTSxLQUFLLE1BQU0sSUFDdEJELE9BQWEsUUFBUSxRQUFRLEtBQUs7QUFDeEMsY0FBVSxRQUFRQyxPQUFNLEtBQUssWUFDekIsT0FBT0EsT0FBTSxLQUFLLFNBQVMsSUFDekJELE9BQWEsUUFBUSxXQUFXLEtBQUs7QUFDM0MsZUFBVyxRQUFRQyxPQUFNLEtBQUssYUFDMUIsT0FBT0EsT0FBTSxLQUFLLFVBQVUsSUFDMUJELE9BQWEsUUFBUSxZQUFZLEtBQUs7QUFDNUMsY0FBVSxRQUFRQyxPQUFNO0FBQUEsRUFBQSxDQUN6QjtBQUVELFdBQVMsTUFBTSxNQUFjO0FBQzNCLFdBQU8sUUFBUTtBQUNmLGdCQUFZLFVBQVUsSUFBSTtBQUFBLEVBQzVCO0FBQ0EsV0FBUyxNQUFNLE1BQWU7QUFDNUIsV0FBTyxRQUFRO0FBQ0gsZ0JBQUEsVUFBVSxHQUFHLE1BQU07QUFBQSxFQUNqQztBQUNBLFdBQVMsU0FBUyxNQUFlO0FBQy9CLGNBQVUsUUFBUTtBQUNOLGdCQUFBLGFBQWEsR0FBRyxNQUFNO0FBQUEsRUFDcEM7QUFDQSxXQUFTLFVBQVUsTUFBZTtBQUNoQyxlQUFXLFFBQVE7QUFDUCxnQkFBQSxjQUFjLEdBQUcsTUFBTTtBQUFBLEVBQ3JDO0FBRVMsV0FBQSxZQUFZLEtBQWEsTUFBYztBQUN4QyxVQUFBLEtBQUssSUFBSTtBQUNaLE9BQUEsT0FBTyxPQUFPLEdBQUc7QUFDakIsT0FBQSxPQUFPLFNBQVMsSUFBSTtBQUN2QixZQUFRLGlCQUFpQixnQkFBZ0I7QUFBQSxNQUN2QyxRQUFRO0FBQUEsTUFDUixNQUFNO0FBQUEsSUFBQSxDQUNQO0FBQUEsRUFDSDtBQUVPLFNBQUE7QUFBQSxJQUNMO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxFQUFBO0FBRUo7OyJ9
