import { storeGet } from "./StoreStuff.9c9e2ee5.js";
import { r as ref } from "./index.c15e704f.js";
const eventsFromServer = ref("");
const isConnected = ref(false);
const base = storeGet("baseUrl", location.origin);
const url = new URL(base);
url.protocol = url.protocol == "https:" ? "wss:" : "ws:";
let socket;
const socketMessageListener = (event) => {
  eventsFromServer.value = event.data;
};
const socketOpenListener = () => {
  console.log("Connected");
  isConnected.value = true;
  socket.addEventListener("message", socketMessageListener);
  socket.addEventListener("close", socketCloseListener);
};
const socketCloseListener = () => {
  isConnected.value = false;
  if (socket) {
    console.error("Disconnected.");
    socket.removeEventListener("message", socketMessageListener);
    socket.removeEventListener("open", socketOpenListener);
    socket.removeEventListener("close", socketCloseListener);
  }
  socket = new WebSocket(`${url.href.slice(0, -1)}/api/v1/downloads`);
  socket.addEventListener("open", socketOpenListener);
};
socketCloseListener();
function useDlSock() {
  const sendMsg = (data) => {
    socket.send(data);
  };
  return {
    eventsFromServer,
    isConnected,
    sendMsg
  };
}
export { useDlSock as u };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlRGxTb2NrLmRlMDAwNjYwLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kb3dubG9hZHMvdXNlRGxTb2NrLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKEMpIENvbnRyaWJ1dG9ycyB0byB0aGUgU3V3YXlvbWkgcHJvamVjdFxuICpcbiAqIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJztcbmltcG9ydCB7IHN0b3JlR2V0IH0gZnJvbSAnc3JjL2Jvb3QvU3RvcmVTdHVmZic7XG5cbmNvbnN0IGV2ZW50c0Zyb21TZXJ2ZXIgPSByZWYoJycpO1xuY29uc3QgaXNDb25uZWN0ZWQgPSByZWYoZmFsc2UpO1xuY29uc3QgYmFzZSA9IHN0b3JlR2V0KCdiYXNlVXJsJywgbG9jYXRpb24ub3JpZ2luKSBhcyBzdHJpbmc7XG5jb25zdCB1cmwgPSBuZXcgVVJMKGJhc2UpO1xudXJsLnByb3RvY29sID0gdXJsLnByb3RvY29sID09ICdodHRwczonID8gJ3dzczonIDogJ3dzOic7XG5sZXQgc29ja2V0OiBXZWJTb2NrZXQ7XG5cbmNvbnN0IHNvY2tldE1lc3NhZ2VMaXN0ZW5lciA9IChldmVudDogTWVzc2FnZUV2ZW50KSA9PiB7XG4gIGV2ZW50c0Zyb21TZXJ2ZXIudmFsdWUgPSBldmVudC5kYXRhO1xufTtcblxuY29uc3Qgc29ja2V0T3Blbkxpc3RlbmVyID0gKCkgPT4ge1xuICBjb25zb2xlLmxvZygnQ29ubmVjdGVkJyk7XG4gIGlzQ29ubmVjdGVkLnZhbHVlID0gdHJ1ZTtcbiAgc29ja2V0LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBzb2NrZXRNZXNzYWdlTGlzdGVuZXIpO1xuICBzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignY2xvc2UnLCBzb2NrZXRDbG9zZUxpc3RlbmVyKTtcbn07XG5cbmNvbnN0IHNvY2tldENsb3NlTGlzdGVuZXIgPSAoKSA9PiB7XG4gIGlzQ29ubmVjdGVkLnZhbHVlID0gZmFsc2U7XG4gIGlmIChzb2NrZXQpIHtcbiAgICBjb25zb2xlLmVycm9yKCdEaXNjb25uZWN0ZWQuJyk7XG4gICAgc29ja2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBzb2NrZXRNZXNzYWdlTGlzdGVuZXIpO1xuICAgIHNvY2tldC5yZW1vdmVFdmVudExpc3RlbmVyKCdvcGVuJywgc29ja2V0T3Blbkxpc3RlbmVyKTtcbiAgICBzb2NrZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xvc2UnLCBzb2NrZXRDbG9zZUxpc3RlbmVyKTtcbiAgfVxuICBzb2NrZXQgPSBuZXcgV2ViU29ja2V0KGAke3VybC5ocmVmLnNsaWNlKDAsIC0xKX0vYXBpL3YxL2Rvd25sb2Fkc2ApO1xuICBzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignb3BlbicsIHNvY2tldE9wZW5MaXN0ZW5lcik7XG59O1xuc29ja2V0Q2xvc2VMaXN0ZW5lcigpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VEbFNvY2soKSB7XG4gIGNvbnN0IHNlbmRNc2cgPSAoZGF0YTogc3RyaW5nKSA9PiB7XG4gICAgc29ja2V0LnNlbmQoZGF0YSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBldmVudHNGcm9tU2VydmVyLFxuICAgIGlzQ29ubmVjdGVkLFxuICAgIHNlbmRNc2dcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVNBLE1BQU0sbUJBQW1CLElBQUksRUFBRTtBQUMvQixNQUFNLGNBQWMsSUFBSSxLQUFLO0FBQzdCLE1BQU0sT0FBTyxTQUFTLFdBQVcsU0FBUyxNQUFNO0FBQ2hELE1BQU0sTUFBTSxJQUFJLElBQUksSUFBSTtBQUN4QixJQUFJLFdBQVcsSUFBSSxZQUFZLFdBQVcsU0FBUztBQUNuRCxJQUFJO0FBRUosTUFBTSx3QkFBd0IsQ0FBQyxVQUF3QjtBQUNyRCxtQkFBaUIsUUFBUSxNQUFNO0FBQ2pDO0FBRUEsTUFBTSxxQkFBcUIsTUFBTTtBQUMvQixVQUFRLElBQUksV0FBVztBQUN2QixjQUFZLFFBQVE7QUFDYixTQUFBLGlCQUFpQixXQUFXLHFCQUFxQjtBQUNqRCxTQUFBLGlCQUFpQixTQUFTLG1CQUFtQjtBQUN0RDtBQUVBLE1BQU0sc0JBQXNCLE1BQU07QUFDaEMsY0FBWSxRQUFRO0FBQ3BCLE1BQUksUUFBUTtBQUNWLFlBQVEsTUFBTSxlQUFlO0FBQ3RCLFdBQUEsb0JBQW9CLFdBQVcscUJBQXFCO0FBQ3BELFdBQUEsb0JBQW9CLFFBQVEsa0JBQWtCO0FBQzlDLFdBQUEsb0JBQW9CLFNBQVMsbUJBQW1CO0FBQUEsRUFDekQ7QUFDUyxXQUFBLElBQUksVUFBVSxHQUFHLElBQUksS0FBSyxNQUFNLEdBQUcsRUFBRSxvQkFBb0I7QUFDM0QsU0FBQSxpQkFBaUIsUUFBUSxrQkFBa0I7QUFDcEQ7QUFDQTtBQUVBLFNBQXdCLFlBQVk7QUFDNUIsUUFBQSxVQUFVLENBQUMsU0FBaUI7QUFDaEMsV0FBTyxLQUFLLElBQUk7QUFBQSxFQUFBO0FBR1gsU0FBQTtBQUFBLElBQ0w7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLEVBQUE7QUFFSjs7In0=
